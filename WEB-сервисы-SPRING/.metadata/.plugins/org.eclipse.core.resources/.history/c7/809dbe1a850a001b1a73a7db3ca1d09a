package ru.appline.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import ru.appline.logic.CompasModel;
import ru.appline.logic.Pet;

@RestController
public class Controller {
	Gson gson = new GsonBuilder().setPrettyPrinting().create();
	private static final CompasModel compasModel = CompasModel.getInstance();
	
/*	@PostMapping(value = "/createCompas", consumes = "application/json", produces = "application/json")
	public Map<String, ArrayList<Integer>> createCompas (@RequestBody Map<String, ArrayList<Integer>> compas) {
		compasModel.add(compas);
		return compasModel.showCompas();
	}
*/	
	@PostMapping(value = "/createCompas", consumes = "application/json", produces = "application/json")
	public Map<String, String> createCompas (@RequestBody Map<String, String> compas) {
		final CompasModel compasShow =compasModel;
		
	/*  "North":		"331-29",
	 	"North-East":	"30-60",
	    "East":			"61-119",
	    "South-East":	"120-150",
	    "South":		"151-209",
		"South-West":	"210-240",
	    "West":			"241-299",
	    "North-West":	"300-330",
	*/
		/*
		 String list_1 = compas.get("North");
		 String[] list_1s = list_1.split("-", 2);
		 ArrayList<Integer> a1 = new ArrayList<Integer>();
		 a1.add(i);//ints
		 1 = north
		 
		 */
	
	
		String[] directions = new String[]{"North", "North-East", 
											"East","South-East", 
											"South", "South-West", 
											"West", "North-West"};
		/*			

		Integer[][] table = new Integer[8][];
		
		for (Integer i = 0; i < 8; i++) {
			String list = compas.get(directions[i]); 
			String[] list_s = list.split("-", 2);	//"40-60" -> ["40", "60"]
			for (Integer j = 0; j < 360; j++) {			//["40", "60"] -> 40, 60 by parseInt()
				if (j >= Integer.parseInt(list_s[1]) || j <= Integer.parseInt(list_s[2])) {			//North
					table[i][j] = j;
				} else if (j >= Integer.parseInt(list_s[1]) && j <= Integer.parseInt(list_s[2])) {	//North-East
					table[i][j] = j;
				} else if (i >= Integer.parseInt(list_3s[1]) && i <= Integer.parseInt(list_3s[2])) {	//East
					a3.add(i);
				} else if (i >= Integer.parseInt(list_4s[1]) && i <= Integer.parseInt(list_4s[2])) {	//South-East
					a4.add(i);
				} else if (i >= Integer.parseInt(list_5s[1]) && i <= Integer.parseInt(list_5s[2])) {	//South
					a5.add(i);
				} else if (i >= Integer.parseInt(list_6s[1]) && i <= Integer.parseInt(list_6s[2])) {	//South-West
					a6.add(i);
				} else if (i >= Integer.parseInt(list_7s[1]) && i <= Integer.parseInt(list_7s[2])) {	//West
					a7.add(i);
				} else if (i >= Integer.parseInt(list_8s[1]) && i <= Integer.parseInt(list_8s[2])) {	//North-West
					a8.add(i);
				}
			
		}
*/		
		String list_1 = compas.get("North");
		String list_2 = compas.get("North-East");
		String list_3 = compas.get("East");
		String list_4 = compas.get("South-East");
		String list_5 = compas.get("South");
		String list_6 = compas.get("South-West");
		String list_7 = compas.get("West");
		String list_8 = compas.get("North-West");
		
		String[] list_1s = list_1.split("-", 2);
		String[] list_2s = list_2.split("-", 2);
		String[] list_3s = list_3.split("-", 2);
		String[] list_4s = list_4.split("-", 2);
		String[] list_5s = list_5.split("-", 2);
		String[] list_6s = list_6.split("-", 2);
		String[] list_7s = list_7.split("-", 2);
		String[] list_8s = list_8.split("-", 2);
	
		Map<String, ArrayList<Integer>> table = new HashMap<String, ArrayList<Integer>>();
		ArrayList<Integer> a1 = new ArrayList<Integer>();
		ArrayList<Integer> a2 = new ArrayList<Integer>();
		ArrayList<Integer> a3 = new ArrayList<Integer>();
		ArrayList<Integer> a4 = new ArrayList<Integer>();
		ArrayList<Integer> a5 = new ArrayList<Integer>();
		ArrayList<Integer> a6 = new ArrayList<Integer>();
		ArrayList<Integer> a7 = new ArrayList<Integer>();
		ArrayList<Integer> a8 = new ArrayList<Integer>();
		
		for (int i = 0; i < 360; i++) {
			if (i >= Integer.parseInt(list_1s[1]) || i <= Integer.parseInt(list_1s[2])) {			//North
				a1.add(i);
			} else if (i >= Integer.parseInt(list_2s[1]) && i <= Integer.parseInt(list_2s[2])) {	//North-East
				a2.add(i);
			} else if (i >= Integer.parseInt(list_3s[1]) && i <= Integer.parseInt(list_3s[2])) {	//East
				a3.add(i);
			} else if (i >= Integer.parseInt(list_4s[1]) && i <= Integer.parseInt(list_4s[2])) {	//South-East
				a4.add(i);
			} else if (i >= Integer.parseInt(list_5s[1]) && i <= Integer.parseInt(list_5s[2])) {	//South
				a5.add(i);
			} else if (i >= Integer.parseInt(list_6s[1]) && i <= Integer.parseInt(list_6s[2])) {	//South-West
				a6.add(i);
			} else if (i >= Integer.parseInt(list_7s[1]) && i <= Integer.parseInt(list_7s[2])) {	//West
				a7.add(i);
			} else if (i >= Integer.parseInt(list_8s[1]) && i <= Integer.parseInt(list_8s[2])) {	//North-West
				a8.add(i);
			}
		}
//			table.put("North", a1);
//			table.put("North-East", a2);
//			table.put("East", a3);
//			table.put("South-East", a4);
//			table.put("South", a5);
//			table.put("South-West", a6);
//			table.put("West", a7);
//			table.put("North-West", a8);
	}
		@GetMapping(value = "/getPet", produces = "application/json")
		public Pet getPet(@RequestBody Map<String, Integer> id) {
			return petModel.getFromList(id.get("id"));
		}
		
		Integer degree;
		String s = "Side";
		Map<String, String> response = new HashMap<>();
		if (a1.contains(degree)) {
			response.put(s, directions[0]);
		}
		
		return response;
				//stream(values).anyMatch(degree::equals);
		
/*		for (int i = 0; i < 4; i++) {
			
		}
		for (table  : massStringA) {
        if (a.equals(s)) {
            return true;
  */      	
		
		
		return compasShow.showCompas();
		
	}
	
}
